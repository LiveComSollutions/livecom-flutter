#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
#ifndef LIVECOMSDK_SWIFT_H
#define LIVECOMSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="LiveComSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)


@class LiveComAppTheme;
@class LiveComAppearenceCornerRadius;
@class LiveComAppearenceFont;

SWIFT_CLASS("_TtC10LiveComSDK10Appearence")
@interface Appearence : NSObject
/// \param theme configure brand colors
///
/// \param cornerRadius override default corner radiuses
///
- (nonnull instancetype)initWithTheme:(LiveComAppTheme * _Nonnull)theme cornerRadius:(LiveComAppearenceCornerRadius * _Nullable)cornerRadius font:(LiveComAppearenceFont * _Nullable)font OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface Appearence (SWIFT_EXTENSION(LiveComSDK))
@end


SWIFT_CLASS_NAMED("CornerRadius")
@interface LiveComAppearenceCornerRadius : NSObject
@property (nonatomic) CGFloat small;
@property (nonatomic) CGFloat large;
- (nonnull instancetype)initWithSmall:(CGFloat)small large:(CGFloat)large OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface Appearence (SWIFT_EXTENSION(LiveComSDK))
@end

@class NSString;

SWIFT_CLASS_NAMED("Font")
@interface LiveComAppearenceFont : NSObject
@property (nonatomic, copy) NSString * _Nullable regularName;
@property (nonatomic, copy) NSString * _Nullable semiboldName;
@property (nonatomic, copy) NSString * _Nullable boldName;
- (nonnull instancetype)initWithRegularName:(NSString * _Nullable)regularName semiboldName:(NSString * _Nullable)semiboldName boldName:(NSString * _Nullable)boldName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface Appearence (SWIFT_EXTENSION(LiveComSDK))
@end

@class UIColor;

SWIFT_CLASS_NAMED("AppTheme")
@interface LiveComAppTheme : NSObject
- (nonnull instancetype)initWithPrimary:(UIColor * _Nonnull)primary secondary:(UIColor * _Nonnull)secondary gradientFirst:(UIColor * _Nonnull)gradientFirst gradientSecond:(UIColor * _Nonnull)gradientSecond OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end







@class LiveComConversionProduct;

SWIFT_CLASS_NAMED("Conversion")
@interface LiveComConversion : NSObject
@property (nonatomic, copy) NSString * _Nonnull orderId;
@property (nonatomic) NSInteger orderAmountInCents;
/// ISO 4217
@property (nonatomic, copy) NSString * _Nonnull currency;
@property (nonatomic, copy) NSArray<LiveComConversionProduct *> * _Nonnull products;
- (nonnull instancetype)initWithOrderId:(NSString * _Nonnull)orderId orderAmountInCents:(NSInteger)orderAmountInCents currency:(NSString * _Nonnull)currency products:(NSArray<LiveComConversionProduct *> * _Nonnull)products OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface LiveComConversion (SWIFT_EXTENSION(LiveComSDK))
@end


SWIFT_CLASS_NAMED("Product")
@interface LiveComConversionProduct : NSObject
@property (nonatomic, copy) NSString * _Nonnull sku;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nonnull streamId;
@property (nonatomic) NSInteger count;
- (nonnull instancetype)initWithSku:(NSString * _Nonnull)sku name:(NSString * _Nonnull)name streamId:(NSString * _Nonnull)streamId count:(NSInteger)count OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@protocol LiveComDelegate;
@class LiveComShareSettings;
@class LiveComPiPSettings;
@class NSUserActivity;

SWIFT_CLASS("_TtC10LiveComSDK7LiveCom")
@interface LiveCom : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LiveCom * _Nonnull shared;)
+ (LiveCom * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <LiveComDelegate> _Nullable delegate;
@property (nonatomic, strong) LiveComShareSettings * _Null_unspecified shareSettings;
@property (nonatomic, strong) LiveComPiPSettings * _Nonnull pipSettings;
/// Indicates whether the SDK is ready to display content.
/// If false - presentStream(:_) and presentStreams() methods will reload data
@property (nonatomic, readonly) BOOL isPrepared;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Initializes LiveCom SDK.
/// Call  this method as soon as possible. For example, in appdelegate’s didFinishLaunchingWithOptions.
/// So that the SDK has time to load all necessary information by the time the content display method is called.
/// \param sdkKey Required. Your app’s SDK key.
///
/// \param appearence Required. Customize the theme and corner radiuses
///
/// \param shareSettings Required. Templates for sharing links. Available replacement params: {video_id}, {product_id}
///
/// \param pipSettings Optional. You can specify controller classes that will be displayes over picture in picture
/// For example: https://subdomain.domain.com/{video_id}
/// For example: https://subdomain.domain.com/{video_id}?p={product_id}
///
- (void)configureWithSdkKey:(NSString * _Nonnull)sdkKey appearence:(Appearence * _Nonnull)appearence shareSettings:(LiveComShareSettings * _Nonnull)shareSettings pipSettings:(LiveComPiPSettings * _Nonnull)pipSettings delegate:(id <LiveComDelegate> _Nullable)delegate isAppClip:(BOOL)isAppClip;
/// Allow LiveCom to handle restoration from an NSUserActivity, returning whether or not it was from a LiveCom link.
- (BOOL)continueWithUserActivity:(NSUserActivity * _Nonnull)userActivity SWIFT_WARN_UNUSED_RESULT;
/// Presents the list of streams screen above current top view controller
/// May take some time if SDK was initialized recently or failed to retrieve information last time
- (void)presentStreamsWithCompletion:(void (^ _Nullable)(BOOL))completion;
/// Presents stream screen with specific id
/// May take some time if SDK was initialized recently or failed to retrieve information last time
/// \param id Required. Stream id.
///
/// \param productId Optional. If specified, it rewinds the video to the moment of the product story and opens the product card.
///
/// \param appearence Required. Customize the theme and corner radiuses
///
- (void)presentStreamWithId:(NSString * _Nonnull)id productId:(NSString * _Nullable)productId completion:(void (^ _Nullable)(BOOL))completion;
/// Presents checkout screen
- (void)presentCheckoutWithCompletion:(void (^ _Nullable)(BOOL))completion;
/// Track order made from custom checkout
- (void)trackConversion:(LiveComConversion * _Nonnull)conversion;
@end



@interface LiveCom (SWIFT_EXTENSION(LiveComSDK))
@end

@class UIViewController;

SWIFT_CLASS_NAMED("PiPSettings")
@interface LiveComPiPSettings : NSObject
- (nonnull instancetype)initWithControllersOverPiP:(NSArray<SWIFT_METATYPE(UIViewController)> * _Nonnull)controllersOverPiP OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface LiveCom (SWIFT_EXTENSION(LiveComSDK))
@end


SWIFT_CLASS_NAMED("ShareSettings")
@interface LiveComShareSettings : NSObject
- (nonnull instancetype)initWithVideoLinkTemplate:(NSString * _Nonnull)videoLinkTemplate productLinkTemplate:(NSString * _Nonnull)productLinkTemplate OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




@interface LiveCom (SWIFT_EXTENSION(LiveComSDK))
@end


SWIFT_CLASS_NAMED("Product")
@interface LiveComProduct : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull sku;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) double price;
/// ISO 4217
@property (nonatomic, readonly, copy) NSString * _Nonnull currency;
- (nonnull instancetype)initWithSku:(NSString * _Nonnull)sku name:(NSString * _Nonnull)name price:(double)price currency:(NSString * _Nonnull)currency OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface LiveCom (SWIFT_EXTENSION(LiveComSDK))
@end



@interface LiveCom (SWIFT_EXTENSION(LiveComSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull sdkVersion;)
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
@end




SWIFT_PROTOCOL("_TtP10LiveComSDK15LiveComDelegate_")
@protocol LiveComDelegate
@optional
/// You can show your own product controller.
///
/// returns:
/// true if you open your own controller. Otherwise LiveCom SDK will use default one.
- (BOOL)userDidRequestOpenProductScreenFor:(LiveComProduct * _Nonnull)product streamId:(NSString * _Nonnull)streamId presenting:(UIViewController * _Nonnull)presentingViewController SWIFT_WARN_UNUSED_RESULT;
/// You can show your own checkout controller.
///
/// returns:
/// true if you open your own controller. Otherwise LiveCom SDK will use default one.
- (BOOL)userDidRequestOpenCheckoutScreenWithProducts:(NSArray<LiveComProduct *> * _Nonnull)products presenting:(UIViewController * _Nonnull)presentingViewController SWIFT_WARN_UNUSED_RESULT;
/// Called when product was added to cart.
/// This method calls on each change in the quantity.
/// For example, if there was 1 piece in the basket, and then it became 3, then the method will be called twice
- (void)productDidAddToCart:(LiveComProduct * _Nonnull)product inStreamId:(NSString * _Nonnull)streamId;
/// Called when product was removed from cart.
/// This method calls on each change in the quantity.
/// For example, if there was 2 piece in the basket, and then it became 0, then the method will be called twice
- (void)productDidDeleteFromCart:(NSString * _Nonnull)productSKU;
/// Called on cart changes
- (void)cartDidChangeWithProducts:(NSArray<LiveComProduct *> * _Nonnull)products;
/// Called before the liveCom SDK will be appeared
- (void)liveComWillAppear;
/// Called after the liveCom SDK has been appeared
- (void)liveComDidAppear;
@end

































































#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
